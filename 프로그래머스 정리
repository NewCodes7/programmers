3/6
1. 특정 코드 반복하고 싶을 때 코드.repeat(n)
2. 축적해서 하나의 결괏값 reduce((acc, curr) ⇒ acc + curr, 0)
3. 문자열 중 대체 replace(대체하고 싶은, 뭘로)
4. 정규표현식 [https://curryyou.tistory.com/234](https://curryyou.tistory.com/234) RegExp
5. split(구분자, 최대개수)

3/7
1. Math.sqrt(n): n의 제곱근을 계산합니다.
2. Number.isInteger(): 주어진 값이 정수인지 아닌지를 판별하는 메서드입니다.
3. for (let c of my_string) answer += c === c.toLowerCase() ? c.toUpperCase() : c.toLowerCase(); 문자열에서 저렇게 순회 가능!
4. sort(): 오름차순 sort((a,b)=> b-a): 내림차순
5. filter(()=>a): a가 true라면 필터링함(원래 배열에서 특정 집단을 배제하고 싶을 때)
6. 배열 원하는 위치에 추가: arr.splice(2, 0, 'd') index 2 ('c')의 위치에 요소를 추가
7. 배열 원하는 위치 삭제: arr.splice(1, 2)  index 1 부터 2개의 요소('b', 'e')를 제거
8. 배열 교체: arr.splice(1,1,5) index 1 부터 1개의 요소를 삭제하고 숫자5를 추가
9. splice(start, deleteCount, item1, item2, ...)
10. = 의미 잊지말자
11. 구조분해할당: 객체나 배열을 변수로 분해할 수 있게 해주는 특별한 문법 ex. let [firstName, surname] = "Bora Lee".split(' ');
12. 최댓값 찾기: let max = Math.max(...array);
13. Spread 연산자는 ... 기호를 사용하여 배열, 객체 또는 이터러블(iterable)의 요소를 펼치는 역할
14. arr.indexOf(a): a의 index를 알려주는 함수
15. Array.prototype.map() : 배열 내의 모든 요소 각각에 대하여 주어진 함수를 호출한 결과를 모아 새로운 배열을 반환
16. sort()의 원래 용도는 알파벳 정렬!!
17. 배열 중복 제거: Set 연산자 이용하거나 filter((c, i)=> indexOf(c) === i)이용 indexOf는 가장 가까운 걸 뱉어내니!
18. 배열이 같은지 비교하고 싶을 때는 뒤에 toString()을 붙이자..아니면 조인!! 그냥 쌩을 비교하면 메모리 주소로 비교하는 듯 (형변환x)